!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.formInputSelector,this._submitButtonSelector=e.formSubmitButtonSelector,this._inactiveButtonClass=e.formSubmitInactiveClass,this._inputErrorClass=e.formInputErrorClass,this._errorClass=e.formInputErrorActiveClass,this._form=t}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._disableButton(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,e.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",e.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}};class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscape=this._handleEscape.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscape)}_handleEscape(e){"Escape"===e.key&&this.close()}_handlePopupClose=e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>this._handlePopupClose(e)))}}class s extends t{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._handleFormSubmit=s}close(){super.close(),this._popupForm.reset()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}}const n={formInputSelector:".modal__form-input",formSubmitButtonSelector:".modal__submit-button",formSubmitInactiveClass:"modal__submit-button_disabled",formInputErrorClass:"modal__form-input_type_error",formInputErrorActiveClass:"modal__error_visible"},r=document.querySelector("#profile-edit-form"),i=(document.querySelector("#profile-name"),document.querySelector("#profile-job"),document.querySelector("#profile-edit-button")),o=document.querySelector("#new-card-form"),a=document.querySelector("#new-card-add-button"),l=(new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._handleResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._handleResponse)}getAPIInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}updateProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._handleResponse)}deleteUserCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}addCardLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}removeCardLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"ae2a222f-f992-4644-9116-ee81d5f8ba63","Content-Type":"application/json"}}),new e(n,r)),h=new e(n,o);h.enableValidation(),l.enableValidation();const d=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:"#profile-name",jobSelector:"#profile-job"}),c=new class extends t{constructor(e){super(e),this._previewModalImage=this._popupElement.querySelector(".modal__preview-image"),this._previewModalCaption=this._popupElement.querySelector(".modal__preview-caption")}open(e){let{name:t,link:s}=e;this._previewModalCaption.textContent=t,this._previewModalImage.src=s,this._previewModalImage.alt=t,super.open()}}({popupSelector:"#preview-image-modal"});c.setEventListeners();const u=e=>{const{name:t,link:s}=e,n=new class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardData=e,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteIcon()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._cardLikeButton.classList.toggle("card__like-button_is-active")}_handleDeleteIcon(){this._cardElement.remove(),this._cardElement=null}_getCardTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getCardTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._addCardTitle=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage.src=this._link,this._cardImage.alt=`A photo of ${this._name}`,this._addCardTitle.textContent=this._name,this._setEventListeners(),this._cardElement}}({name:t,link:s},"#card-template",(e=>{let{name:t,link:s}=e;c.open({name:t,link:s})}));return n.getView()},_=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Grand Teton",link:"https://source.unsplash.com/9nUcpfu476M/"},{name:"Antelope Canyon",link:"https://source.unsplash.com/7he8rO3qdsc"},{name:"Glacier National Park",link:"https://source.unsplash.com/qsngjpG5I5s"},{name:"Yosemite National Park",link:"https://source.unsplash.com/UCd78vfC8vU"},{name:"Rockey Mountain National Park",link:"https://source.unsplash.com/pq2DJBntZW0"},{name:"Zion National Park",link:"https://source.unsplash.com/tvg2AeJHfbM"}],renderer:e=>{_.addItem(u(e))}},"#card-section");_.renderItems();const m=new s({popupSelector:"#new-card-modal",handleFormSubmit:e=>{_.addItem(u(e))}});m.setEventListeners(),a.addEventListener("click",(function(){h.resetValidation(),m.open()}));const p=new s({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{d.setUserInfo(e)}});p.setEventListeners(),i.addEventListener("click",(function(){const e=d.getUserInfo();p.setInputValues(e),l.resetValidation(),p.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,